[{"/home/hzrd/Documents/349-project-2/src/index.tsx":"1","/home/hzrd/Documents/349-project-2/src/DataView.tsx":"2","/home/hzrd/Documents/349-project-2/src/GraphView.tsx":"3","/home/hzrd/Documents/349-project-2/src/Searchbar.tsx":"4","/home/hzrd/Documents/349-project-2/src/App.tsx":"5","/home/hzrd/Documents/349-project-2/src/GrabDataHelpers.ts":"6","/home/hzrd/Documents/349-project-2/src/MapView.tsx":"7"},{"size":810,"mtime":1608441108110,"results":"8","hashOfConfig":"9"},{"size":2688,"mtime":1608441151642,"results":"10","hashOfConfig":"9"},{"size":4397,"mtime":1608441151642,"results":"11","hashOfConfig":"9"},{"size":2139,"mtime":1608441151642,"results":"12","hashOfConfig":"9"},{"size":2224,"mtime":1608440836613,"results":"13","hashOfConfig":"9"},{"size":4483,"mtime":1608454831071,"results":"14","hashOfConfig":"9"},{"size":2870,"mtime":1608456030625,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},"7zcq8n",{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/hzrd/Documents/349-project-2/src/index.tsx",[],["33","34"],"/home/hzrd/Documents/349-project-2/src/DataView.tsx",[],"/home/hzrd/Documents/349-project-2/src/GraphView.tsx",[],"/home/hzrd/Documents/349-project-2/src/Searchbar.tsx",[],"/home/hzrd/Documents/349-project-2/src/App.tsx",["35","36","37","38","39"],"import React from 'react';\nimport {Button, Paper} from '@material-ui/core';\nimport {Public, TableChart, Assessment} from '@material-ui/icons';\nimport './App.css';\nimport {MapView} from './MapView';\n/*import {Map} from './MapView'*/\nimport {DataView} from './DataView';\nimport {GraphView} from './GraphView';\nimport {fetchCountryDataForBar, grabData} from './GrabDataHelpers';\n\n\nenum AppView {\n    Map,\n    Data,\n    Graph\n}\ntype AppState = {\n    currentView: AppView,\n    data:{},\n    country:string\n}\nclass App extends React.Component<{}, AppState> {\n    state = {\n        currentView: AppView.Map,\n        data:{},\n        country:''\n    };\n\n\n    render() {\n        const {data, country} = this.state;\n\n        var view;\n        switch (this.state.currentView) {\n            case AppView.Map:\n                view = <MapView></MapView>;\n                break;\n            case AppView.Data:\n                view = <DataView></DataView>;\n                break;\n            case AppView.Graph:\n                view = <GraphView></GraphView>;\n                break;\n        }\n\n        return (\n            <div className=\"App\">\n                <div className=\"nav-rail\">\n                    <Button onClick={() => {this.setState({currentView: AppView.Map})}}>\n                        <div className=\"nav-rail-button\">\n                            <Public />\n                            <span>Map</span>\n                        </div>\n                    </Button>\n                    <Button onClick={() => {this.setState({currentView: AppView.Data})}}>\n                        <div className=\"nav-rail-button\">\n                            <TableChart />\n                            <span>Data</span>\n                        </div>\n                    </Button>\n                    <Button onClick={() => {this.setState({currentView: AppView.Graph})}}>\n                        <div className=\"nav-rail-button\">\n                            <Assessment />\n                            Graph\n                        </div>\n                    </Button>\n                </div>\n                <div style={{width: \"95%\"}}>\n                    {view}\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default App;\n","/home/hzrd/Documents/349-project-2/src/GrabDataHelpers.ts",["40","41","42","43"],"import axios from 'axios';\n//can use /deaths, /daily, /recovered, /confirmed, /countries/[CountryName] on base_url\nconst base_url = \"https://covid19.mathdro.id/api\";\nconst global_overview_url = \"https://disease.sh/v3/covid-19/all\";\nconst states_url = \"https://disease.sh/v3/covid-19/states/\";\n//Gets all data for countries\nconst countries_url = 'https://disease.sh/v3/covid-19/countries/';\n\nexport async function grabData<TPrototype, TResultantType>(\n    url: string,\n    converter: (val: TPrototype, index: number) => TResultantType)\n    : Promise<TResultantType[]> {\n    const response = await fetch(url);\n    const body = await response.json();\n    return body.map(converter);\n}\n\nexport const getMapData = async () => {\n    try {\n        \n        const response = await fetch(countries_url);\n        //returns array of countries\n        const data = await response.json();\n        /*first country\n        console.log('first country object', data[0]);\n        console.log(data[0].cases);\n        console.log('latitude',data[0].countryInfo['lat']);\n        console.log('longitude', data[0].countryInfo['long']);*/\n    \n        if (!data){\n          return ;}\n      \n      return data;\n    } catch (error) {\n        return error;\n    }\n  };\n\nexport const getCountryData = async (country: any)=>{\n  if (country){\n    let cUrl = `${countries_url}${country}`;\n    //console.log('county url',cUrl);\n    try{\n        const response = await fetch(cUrl);\n        const data = await response.json();\n        return data;\n        //console.log('get country',data);\n    }\n    catch(error){\n      return error;\n    }\n  }\n  return {};\n}\n\nexport const getUSData = async () =>{\n  try {\n    const response = await fetch(states_url);\n    //returns array of states\n    const data = await response.json();\n    //State Array\n    //console.log('US object', data);\n    if (!data){\n      //console.log('failed');\n      return ;}\n    return data;\n  } catch (error) {return error;}\n}\n\nexport const getStateData = async (states: any)=>{\n  if (states){\n    let sUrl = `${states_url}${states}`;\n    //console.log('state url',sUrl);\n    try{\n        const response = await fetch(sUrl);\n        const data = await response.json();\n        //console.log('state',data);\n    }\n    catch(error){\n      return error;\n    }\n  }\n  return {};\n}\n// =============================\n//          SAMPLE DATA\n// =============================\n\n\n// SORTED BY POSTAL CODE ABBREVIATION\n// DUE TO HOW THE COVID TRACKING PROJECT WORKS\nexport var states = [\n    \"Alaska\", \"Alabama\", \"Arkansas\",\"American Samoa\", \"Arizona\",\n    \"California\", \"Colorado\", \"Connecticut\",\n    \"District of Columbia\",\"Delaware\",\n    \"Florida\",\n    \"Georgia\", \"Guam\",\n    \"Hawaii\",\n    \"Iowa\", \"Idaho\", \"Illinois\", \"Indiana\",\n    \"Kansas\", \"Kentucky\",\n    \"Louisiana\",\n    \"Massachusetts\", \"Maryland\", \"Maine\", \"Michigan\", \"Minnesota\", \"Missouri\", \"Mariana Islands\",\n    \"Mississippi\", \"Montana\",\n    \"North Carolina\", \"North Dakota\", \"Nebraska\", \"New Hampshire\", \"New Jersey\",\n    \"New Mexico\", \"Nevada\", \"New York\",\n    \"Ohio\", \"Oklahoma\", \"Oregon\",\n    \"Pennsylvania\", \"Puerto Rico\",\n    \"Rhode Island\",\n    \"South Carolina\", \"South Dakota\",\n    \"Tennessee\", \"Texas\",\n    \"Utah\",\n    \"Virginia\", \"Virgin Islands\", \"Vermont\",\n    \"Washington\", \"Wisconsin\", \"West Virginia\", \"Wyoming\",\n]\n\nexport var abbreviations = [\n    \"AK\",\"AL\",\"AR\",\"AS\",\"AZ\",\n    \"CA\",\"CO\",\"CT\",\n    \"DC\",\"DE\",\n    \"FL\",\n    \"GA\",\"GU\",\n    \"HI\",\"IA\",\n    \"ID\",\"IL\",\"IN\",\n    \"KS\",\"KY\",\n    \"LA\",\n    \"MA\",\"MD\",\"ME\",\"MI\",\"MN\",\"MO\",\"MP\",\"MS\",\"MT\",\n    \"NC\",\"ND\",\"NE\",\"NH\",\"NJ\",\"NM\",\"NV\",\"NY\",\n    \"OH\",\"OK\",\"OR\",\n    \"PA\",\"PR\",\n    \"RI\",\n    \"SC\",\"SD\",\n    \"TN\",\"TX\",\n    \"UT\",\n    \"VA\",\"VI\",\"VT\",\n    \"WA\",\"WI\",\"WV\",\"WY\", \n]\n\nexport var latlngs: [number, number][] = [\n    [64, -149], [32, -86], [35, -91], [-14, -170], [34, -111],\n    [36, -119], [39, -105], [41, -73],\n    [38, -77], [38, -75],\n    [27, -81],\n    [32, -82], [13, 144],\n    [19, -155],\n    [41, -93], [44, -114], [40, -89], [40, -86],\n    [39, -98], [37, -84],\n    [30, -91],\n    [42, -71], [39, -76], [45, 69], [44, -85], [46, -94], [37, -91], [15, 145],\n    [32, -89], [46, -110],\n    [35, -79], [47, -101], [41, -99], [43, -71], [40, -74],\n    [34, -105], [38, -116], [43, -74],\n    [40, -82], [35, -97], [43, -120],\n    [41, -77], [18, -66],\n    [41, -71],\n    [33, -81], [43, -99],\n    [35, -86], [31, -99],\n    [39, -111],\n    [37, -78], [18, -64], [44, -72],\n    [47, -120], [43, -88], [38, -80], [43, -107],\n]","/home/hzrd/Documents/349-project-2/src/MapView.tsx",["44","45","46"],{"ruleId":"47","replacedBy":"48"},{"ruleId":"49","replacedBy":"50"},{"ruleId":"51","severity":1,"message":"52","line":2,"column":17,"nodeType":"53","messageId":"54","endLine":2,"endColumn":22},{"ruleId":"51","severity":1,"message":"55","line":9,"column":9,"nodeType":"53","messageId":"54","endLine":9,"endColumn":31},{"ruleId":"51","severity":1,"message":"56","line":9,"column":33,"nodeType":"53","messageId":"54","endLine":9,"endColumn":41},{"ruleId":"51","severity":1,"message":"57","line":31,"column":16,"nodeType":"53","messageId":"54","endLine":31,"endColumn":20},{"ruleId":"51","severity":1,"message":"58","line":31,"column":22,"nodeType":"53","messageId":"54","endLine":31,"endColumn":29},{"ruleId":"51","severity":1,"message":"59","line":1,"column":8,"nodeType":"53","messageId":"54","endLine":1,"endColumn":13},{"ruleId":"51","severity":1,"message":"60","line":3,"column":7,"nodeType":"53","messageId":"54","endLine":3,"endColumn":15},{"ruleId":"51","severity":1,"message":"61","line":4,"column":7,"nodeType":"53","messageId":"54","endLine":4,"endColumn":26},{"ruleId":"51","severity":1,"message":"57","line":76,"column":15,"nodeType":"53","messageId":"54","endLine":76,"endColumn":19},{"ruleId":"51","severity":1,"message":"62","line":1,"column":16,"nodeType":"53","messageId":"54","endLine":1,"endColumn":24},{"ruleId":"51","severity":1,"message":"63","line":1,"column":25,"nodeType":"53","messageId":"54","endLine":1,"endColumn":34},{"ruleId":"51","severity":1,"message":"64","line":4,"column":50,"nodeType":"53","messageId":"54","endLine":4,"endColumn":55},"no-native-reassign",["65"],"no-negated-in-lhs",["66"],"@typescript-eslint/no-unused-vars","'Paper' is defined but never used.","Identifier","unusedVar","'fetchCountryDataForBar' is defined but never used.","'grabData' is defined but never used.","'data' is assigned a value but never used.","'country' is assigned a value but never used.","'axios' is defined but never used.","'base_url' is assigned a value but never used.","'global_overview_url' is assigned a value but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Popup' is defined but never used.","no-global-assign","no-unsafe-negation"]